name: push
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - run: yarn lint

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --frozen-lockfile
      - name: Setup .env
        env:
          PICKER_API_KEY: ${{ secrets.PICKER_API_KEY }}
          CLASPRC_JSON: ${{ secrets.CLASPRC_JSON }}
          CLASP_JSON: ${{ secrets.CLASP_JSON }}
        run: |
          echo "VUE_APP_PICKER_DEVELOPER_KEY=${PICKER_API_KEY}" > ./frontend/.env
          echo "${CLASPRC_JSON}" > ~/.clasprc.json
          echo "${CLASP_JSON}" > ./.clasp.json
      - run: yarn build
      - run: yarn run clasp push -f
      - run: yarn run clasp version "${COMMIT_MESSAGE} ${GITHUB_SHA}"
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      - run: echo "DEPLOYMENT_ID=$(yarn -s run clasp deployments | tail -n 1 | awk '{ print $2 }')" >> $GITHUB_ENV
      - run: echo "VERSION_NUMBER=$(yarn -s run clasp versions | sed -n 2p | awk '{ print $1 }')" >> $GITHUB_ENV
      - run: yarn run clasp deploy -i ${DEPLOYMENT_ID} -V ${VERSION_NUMBER}
